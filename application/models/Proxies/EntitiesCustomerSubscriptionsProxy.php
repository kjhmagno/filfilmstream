<?php

namespace Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class EntitiesCustomerSubscriptionsProxy extends \Entities\CustomerSubscriptions implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function setStartDate($startDate)
    {
        $this->__load();
        return parent::setStartDate($startDate);
    }

    public function getStartDate()
    {
        $this->__load();
        return parent::getStartDate();
    }

    public function setEndDate($endDate)
    {
        $this->__load();
        return parent::setEndDate($endDate);
    }

    public function getEndDate()
    {
        $this->__load();
        return parent::getEndDate();
    }

    public function setStatus($status)
    {
        $this->__load();
        return parent::setStatus($status);
    }

    public function getStatus()
    {
        $this->__load();
        return parent::getStatus();
    }

    public function setCustomers(\Entities\Customers $customers)
    {
        $this->__load();
        return parent::setCustomers($customers);
    }

    public function getCustomers()
    {
        $this->__load();
        return parent::getCustomers();
    }

    public function setSubscriptions(\Entities\Subscriptions $subscriptions)
    {
        $this->__load();
        return parent::setSubscriptions($subscriptions);
    }

    public function getSubscriptions()
    {
        $this->__load();
        return parent::getSubscriptions();
    }

    public function addMovies(\Entities\Movies $movies)
    {
        $this->__load();
        return parent::addMovies($movies);
    }

    public function getMovies()
    {
        $this->__load();
        return parent::getMovies();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'startDate', 'endDate', 'status', 'customers', 'subscriptions', 'movies');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}